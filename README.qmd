---
format:
  gfm:
    toc: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
---

```{r}
#| echo: false
# Knitr options
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "man/figures/"
)

# Non-executable inline code
rinline <- function(code){
  txt <- "`r CODE`"
  sub("CODE", code, txt)
}
```

# taxnames

*insert badges here*

# Motivation

This package attempts to simplify the citation and formatting of taxonomic names in Markdown documents ([R Markdown](https://rmarkdown.rstudio.com/) and [Quarto](https://quarto.org/)) as well as in LaTeX ([knitr](https://yihui.org/knitr/)).

To use this package, you need to have a taxonomic list imported into the [taxlist](https://docs.ropensci.org/taxlist/) package, including taxonomic ranks and parent-child relationships.

# Get started

## Installing taxnames

Assuming you are already working in one of the frameworks, either R Mardown or Quarto, you will need to install `taxnames` on your own system.

```{r}
#| eval: false
install.packages("taxnames", dependencies = TRUE)
```

Alternatively, you can download the latest development version from **GitHub** using the package [remotes](https://remotes.r-lib.org/).

```{r}
#| eval: false
library(remotes)
install_github("kamapu/taxnames")
```

## Set a standard taxonomy

Before you continue, you will need to load the packages `taxlist` and `taxnames` in your session.

```{r}
#| message: false
library(taxlist)
library(taxnames)
```

The package `taxnames` uses a taxonomic object formatted by `taxlist` and stored in the background.
If you manage to import your taxonomic list to `taxlist`, you can then set your own standard taxonomy.

```{r}
#| eval: false
set_tax(your_taxlist_object)
```

Per default `taxnames` takes the taxonomic list **Easplist** form the package `taxlist`.

```{r}
get_tax()
```

# Use case

The main task of `taxnames` is to allow the formatting of taxonomic names by linking documents to pre-formatted taxonomic lists.
This avoids typing errors (even experts make them) and allows reproducibility and automation, especially for reporting on biodiversity.

We will select a target taxon using the keyword `"papyrus"`.

```{r}
# Match 'papyrus' with the taxonomic list
summary(get_tax(), "papyrus")

# Show it in an indented list
indented_list(get_tax(), "papyrus")
```

We pick the correspondent taxon identifier **206**.
Now we can use this ID to mention the taxon.

````
`r rinline("tn_fna(206)")`, also known as papyrus, is a tall sedge
growing in reed-like swamp vegetation in shallow water.
`r rinline("tn_an(206)")` has a very long history of use by humans as
one of the first types of paper ever made.
````

This will be rendered as

> `r tn_fna(206)`, also known as papyrus, is a tall sedge growing in reed-like swamp vegetation in shallow water.
> `r tn_an(206)` has a very long history of use by humans as one of the first types of paper ever made.

```{r}
#| output: asis
library(simplermarkdown)
cat(md_table(head(iris)))
```
